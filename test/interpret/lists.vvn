assert(toString([]) == "[]")
assert(toString([][0]) == "void")
assert(toString([][3]) == "void")

assert(toString([1]) == "[1]")
assert([1][0] == 1)
assert(toString([1][1]) == "void")
assert(toString([1][3]) == "void")

assert(toString([1, 2]) == "[1, 2]")
assert([1, 2][0] == 1)
assert([1, 2][1] == 2)
assert(toString([1, 2][2]) == "void")
assert(toString([1, 2][3]) == "void")

assert(toString([1, [], 2]) == "[1, [], 2]")
assert([1, [], 2][0] == 1)
assert(toString([1, [], 2][1]) == "[]")
assert([1, [], 2][2] == 2)
assert(toString([1, 2][3]) == "void")
assert(toString([1, 2][5]) == "void")

var list = [1, 2]
assert(toString(list) == "[1, 2]")
assert(list[0] == 1)
assert(list[1] == 2)
assert(toString([list]) == "[[1, 2]]")
assert([list][0] == list);
assert([list][0][0] == 1);
assert([list][0][1] == 2);

var i = 0
var shouldBeNew = [];
for i < 10
  shouldBeNew = [1, 2]
  assert(toString(shouldBeNew) == "[1, 2]")
  append(shouldBeNew, 3)
  assert(toString(shouldBeNew) == "[1, 2, 3]")
  i = i + 1
end
